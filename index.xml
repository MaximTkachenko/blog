<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software engineering blog without title</title>
    <link>https://mtkachenko.me/blog/</link>
    <description>Recent content on Software engineering blog without title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Oct 2021 11:11:11 +0000</lastBuildDate>
    <atom:link href="https://mtkachenko.me/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dotnet code generation overview by example</title>
      <link>https://mtkachenko.me/blog/2021/10/03/dotnet-code-generation.html</link>
      <pubDate>Sun, 03 Oct 2021 11:11:11 +0000</pubDate>
      <guid>https://mtkachenko.me/blog/2021/10/03/dotnet-code-generation.html</guid>
      <description>Introduction Code generation is a very interesting topic. Instead of just writing code you can write code to write code. You can do code generation at compile time (new fancy source generators) and at runtime (expressions, emit IL). Anyway the idea to create methods and classes at runtime sounds like a magic to me. Runtime code generation feature is used quite heavily under the hood of DI frameworks, ORMs, different types of object mappers etc.</description>
    </item>
  </channel>
</rss>
